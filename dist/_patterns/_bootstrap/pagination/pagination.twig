{#
/**
 * @file
 * Template for a Pagination components.
 *
 * Available config:
 * - utility_classes: An array of utility classes.
 * - size: sm, md, lg
 * - alignment: left | right | center | vertical.
 */
 */
#}

{% if alignment == 'right' %}
  {% set alignment = 'justify-content-end' %}
{% elseif alignment == 'center' %}
  {% set alignment = 'justify-content-center' %}
{% else %}
  {% set alignment = '' %}
{% endif %}

{% if items %}
  <nav class="{{ utility_classes|join(' ') }}" role="navigation" aria-labelledby="pagination-heading">
    <h4 id="pagination-heading" class="sr-only">{{ 'Pagination' }}</h4>
    <ul class="pagination pager__items js-pager__items {{ size ? 'pagination-' ~ size }} {{ alignment }}">
      {# Print first item if we are not on the first page. #}
      {% if items.first %}
        <li class="page-item pager__item pager__item--first">
          <a href="{{ items.first.href }}" title="{{ 'Go to first page' }}"{#{ items.first.attributes }#} class="page-link">
            <span class="sr-only">{{ 'First page' }}</span>
            <span aria-hidden="true">{{ items.first.text|default('« First') }}</span>
          </a>
        </li>
      {% endif %}
      {# Print previous item if we are not on the first page. #}
      {% if items.previous %}
        <li class="page-item pager__item pager__item--previous">
          <a href="{{ items.previous.href }}" title="{{ 'Go to previous page' }}" rel="prev"{#{ items.previous.attributes }#} class="page-link">
            <span class="sr-only">{{ 'Previous page' }}</span>
            <span aria-hidden="true">{{ items.previous.text|default('‹ Previous') }}</span>
          </a>
        </li>
      {% endif %}
      {# Add an ellipsis if there are further previous pages. #}
      {% if ellipses.previous %}
        <li class="page-item pager__item pager__item--ellipsis" role="presentation">&hellip;</li>
      {% endif %}
      {# Now generate the actual pager piece. #}
      {% for key, item in items.pages %}
        <li class="page-item pager__item{{ current == key ? ' is-active active' : '' }}">
          {% if current == key %}
            {% set title = 'Current page' %}
          {% else %}
            {% set title = "Go to page #{ key }" %}
          {% endif %}
          <a href="{{ item.href }}" title="{{ title }}"{#{ item.attributes }#} class="page-link">
            <span class="sr-only">
              {{ current == key ? 'Current page' : 'Page' }}
            </span>
            {{- key -}}
          </a>
        </li>
      {% endfor %}

      {#
        @todo Remove this.  It's related to the Drupal views mini pager.
      #}
      {% if items.current and (items.previous or items.next) %}
        <li class="page-item disabled">

            <span class="page-link">Page {{ items.current }}</span>

        </li>
      {% endif %}

      {# Add an ellipsis if there are further next pages. #}
      {% if ellipses.next %}
        <li class="page-item pager__item pager__item--ellipsis" role="presentation">&hellip;</li>
      {% endif %}
      {# Print next item if we are not on the last page. #}
      {% if items.next %}
        <li class="page-item pager__item pager__item--next">
          <a href="{{ items.next.href }}" title="{{ 'Go to next page' }}" rel="next"{#{ items.next.attributes }#} class="page-link">
            <span class="sr-only">{{ 'Next page' }}</span>
            <span aria-hidden="true">{{ items.next.text|default('Next ›') }}</span>
          </a>
        </li>
      {% endif %}
      {# Print last item if we are not on the last page. #}
      {% if items.last %}
        <li class="page-item pager__item pager__item--last">
          <a href="{{ items.last.href }}" title="{{ 'Go to last page' }}"{#{ items.last.attributes }#} class="page-link">
            <span class="sr-only">{{ 'Last page' }}</span>
            <span aria-hidden="true">{{ items.last.text|default('Last »') }}</span>
          </a>
        </li>
      {% endif %}
    </ul>
  </nav>
{% endif %}
